#include <iostream>
#include <cmath>
#include <fstream>
#include <QImage>

using namespace std;

int main()
{

    string rutaImagen = "../Parcial2/banderas/brasil.png";
    //Cargo la imagen en la ruta definida por filename
    QImage imagenOriginal(rutaImagen.c_str());
    ofstream archivoBandera;
    archivoBandera.open("RGBbandera.txt",ios::out);

    //El ancho y alto de la imagen se dividen entre 16, pues es el numero de pixeles que usaremos para representar la bandera en Tinkercad
    int anchoOriginal=imagenOriginal.width();
    int altoOriginal=imagenOriginal.height();

    int AltoMatrizAux = imagenOriginal.height()/16;
    int AnchoMatrizAux = imagenOriginal.width()/16;

    cout<<anchoOriginal<<" x "<<altoOriginal<<endl;
    cout<<AnchoMatrizAux<<" x "<<AltoMatrizAux<<endl;
    //Matriz tridimensional en donde se guardaran las tres matrices RGB
    int MatrizRGB[3][altoOriginal][anchoOriginal+1];
    int MatrizAux[AltoMatrizAux][AnchoMatrizAux];

        for(int i=0;i<3;i++){
            //Se recorre el largo y ancho de la imagen
            for(int indY = 0; indY < altoOriginal; indY++){
                for(int indX = 0; indX < anchoOriginal; indX++){

                if(i==0){
                   MatrizRGB[i][indY][indX] = imagenOriginal.pixelColor(indX,indY).red();
                    //cout<<MatrizRGB[i][indY][indX]<<",";
                }
               else if(i==1){
                    MatrizRGB[i][indY][indX] = imagenOriginal.pixelColor(indX,indY).green();
                }
                else{
                    MatrizRGB[i][indY][indX] = imagenOriginal.pixelColor(indX,indY).blue();
                }
                }cout<<endl;
            }
            cout<<endl;
            cout<<endl;
        }

        int cont=0, sumatoria=0, promedio=0, posPromedio=0;
        int newMATRIZ[3][16][16], promedios[256];

        if(anchoOriginal>=16 && altoOriginal>=16){
        while(cont<3){
        for(int indY = 0; indY < altoOriginal; indY+= AltoMatrizAux){
             for(int indX = 0; indX < anchoOriginal; indX+= AnchoMatrizAux){

                 for(int i=0;i<AltoMatrizAux;i++){
                 for(int j=0;j<AnchoMatrizAux;j++){
                     MatrizAux[i][j]=MatrizRGB[cont][indY+i][indX+j];
                        sumatoria=sumatoria+MatrizAux[i][j];
                        }
                    }
                 promedio=round(sumatoria/(AltoMatrizAux*AnchoMatrizAux));

                 promedios[posPromedio]=promedio;
                 posPromedio++;
                 sumatoria=0;
                }
            }
        posPromedio=0;
        //Ciclo para rellenar la nueva matriz de intensidad con tamaño 16x16
        archivoBandera<<"{";
        archivoBandera<<endl;
        for(int newfila=0; newfila<16; newfila++){
            archivoBandera<<"{";
            for(int newcolumna=0; newcolumna<16; newcolumna++){
                newMATRIZ[cont][newfila][newcolumna]=promedios[posPromedio];
                posPromedio++;
                if(newcolumna<15){
                    archivoBandera<<newMATRIZ[cont][newfila][newcolumna]<<",";}
                else if(newcolumna==15){
                    archivoBandera<<newMATRIZ[cont][newfila][newcolumna];
                }
                cout<<newMATRIZ[cont][newfila][newcolumna]<<" ";
            }
            if(newfila<15){
                archivoBandera<<"},";}
            else if(newfila==15){
                archivoBandera<<"}";
            }
            archivoBandera<<endl;

            cout<<endl;
        }
        posPromedio=0;
        if(cont<2){
            archivoBandera<<"},";}
        else if(cont==2){
            archivoBandera<<"}";
        }
        cont++;
        archivoBandera<<endl;
        cout<<endl;
}}
        else{
            int AltoMatrizAux1 = 16/imagenOriginal.height();
            int AnchoMatrizAux1 = 16/imagenOriginal.width();
            int MatrizAux1[AltoMatrizAux1][AnchoMatrizAux1];

            while(cont<3){
            for(int indY = 0; indY < altoOriginal; indY+= AltoMatrizAux){
                 for(int indX = 0; indX < anchoOriginal; indX+= AnchoMatrizAux){

                     for(int i=0;i<AltoMatrizAux1;i++){
                     for(int j=0;j<AnchoMatrizAux1;j++){
                         MatrizAux1[i][j]=MatrizRGB[cont][indY][indX];
                            sumatoria=sumatoria+MatrizAux[i][j];
                            }
                        }
                     promedio=round(sumatoria/(AltoMatrizAux1*AnchoMatrizAux1));

                     promedios[posPromedio]=promedio;
                     posPromedio++;
                     sumatoria=0;
                    }
                }
            posPromedio=0;
            //Ciclo para rellenar la nueva matriz de intensidad con tamaño 16x16
            archivoBandera<<"{";
            archivoBandera<<endl;
            for(int newfila=0; newfila<16; newfila++){
                archivoBandera<<"{";
                for(int newcolumna=0; newcolumna<16; newcolumna++){
                    newMATRIZ[cont][newfila][newcolumna]=promedios[posPromedio];
                    posPromedio++;
                    if(newcolumna<15){
                        archivoBandera<<newMATRIZ[cont][newfila][newcolumna]<<",";}
                    else if(newcolumna==15){
                        archivoBandera<<newMATRIZ[cont][newfila][newcolumna];
                    }
                    cout<<newMATRIZ[cont][newfila][newcolumna]<<" ";
                }
                if(newfila<15){
                    archivoBandera<<"},";}
                else if(newfila==15){
                    archivoBandera<<"}";
                }
                archivoBandera<<endl;

                cout<<endl;
            }
            posPromedio=0;
            if(cont<2){
                archivoBandera<<"},";}
            else if(cont==2){
                archivoBandera<<"}";
            }
            cont++;
            archivoBandera<<endl;
            cout<<endl;
    }
        }
        archivoBandera.close();

    return 0;
}
