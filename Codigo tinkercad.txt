#include <Adafruit_NeoPixel.h>

#define LED_PIN 2

//numero de pixeles que controlo
#define LED_COUNT 256

//creo un objeto tipo NeoPixel llamado MatrizLEDS
Adafruit_NeoPixel MatrizLEDS(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);
int _componentepixel(int RGB, int i, int j);


void setup()
{
  
  int Ind_Led=0;
int R=0;
int G=0;
int B=0;


  Serial.begin(9600);
  MatrizLEDS.begin();
  
  for(int i=0; i<16; i++){
    for (int j=0; j<16; j++){
         
         R=_componentepixel(0, i, j);
         G=_componentepixel(1, i, j);
         B=_componentepixel(2, i, j);
         MatrizLEDS.setPixelColor(Ind_Led, R, G,  B);
         Ind_Led++;
      
    	}
      
  		
      //strip.setPixelColor(n, red, green, blue); n=indice del arreglo de LEDs
  		//Establece el color del pixel
  }
  
  //para mostras los pixeles con color 
  //MatrizLEDS.setPixelColor(0, 0,  155,58);
  //Serial.print("Bienvenido.\nElija la funcion que desea ejecutar: ");
  //int m=_componentepixel(1, 2, 9);
  //Serial.print(m);
  
  
    MatrizLEDS.show();
}

void loop()
{
  digitalWrite(LED_BUILTIN, HIGH);
  delay(1000); // Wait for 1000 millisecond(s)
  digitalWrite(LED_BUILTIN, LOW);
  delay(1000); // Wait for 1000 millisecond(s)
}

int _componentepixel(int RGB, int i, int j){
  
  
  int NEWmatrizRGB[3][16][17]=
{ //COPIAR TEXTO DESDE ESTE PUNTO
  {
{0,0,0,0,0,1,222,222,222,222,222,213,254,254,254,254},
{254,0,0,0,0,0,1,222,222,222,222,222,213,254,254,254},
{254,254,0,0,0,0,0,1,222,222,222,222,222,213,254,254},
{254,254,254,0,0,0,0,0,1,222,222,222,222,222,213,254},
{254,254,254,254,0,0,0,0,0,1,222,222,222,222,222,213},
{254,254,254,254,254,0,0,0,0,0,1,222,222,222,222,222},
{213,254,254,254,254,254,0,0,0,0,0,1,222,222,222,222},
{222,213,254,254,254,254,254,0,0,0,0,0,1,222,222,222},
{222,222,213,254,254,254,254,254,0,0,0,0,0,1,222,222},
{222,222,222,213,254,254,254,254,254,0,0,0,0,0,1,222},
{222,222,222,222,213,254,254,254,254,254,0,0,0,0,0,1},
{222,222,222,222,222,213,254,254,254,254,254,0,0,0,0,0},
{1,222,222,222,222,222,213,254,254,254,254,254,0,0,0,0},
{0,1,222,222,222,222,222,213,254,254,254,254,254,0,0,0},
{0,0,1,222,222,222,222,222,213,254,254,254,254,254,0,0},
{0,0,0,1,222,222,222,222,222,213,254,254,254,254,254,0}
},
{
{0,0,0,0,0,0,0,0,0,0,0,8,206,206,206,206},
{206,0,0,0,0,0,0,0,0,0,0,0,8,206,206,206},
{206,206,0,0,0,0,0,0,0,0,0,0,0,8,206,206},
{206,206,206,0,0,0,0,0,0,0,0,0,0,0,8,206},
{206,206,206,206,0,0,0,0,0,0,0,0,0,0,0,8},
{206,206,206,206,206,0,0,0,0,0,0,0,0,0,0,0},
{8,206,206,206,206,206,0,0,0,0,0,0,0,0,0,0},
{0,8,206,206,206,206,206,0,0,0,0,0,0,0,0,0},
{0,0,8,206,206,206,206,206,0,0,0,0,0,0,0,0},
{0,0,0,8,206,206,206,206,206,0,0,0,0,0,0,0},
{0,0,0,0,8,206,206,206,206,206,0,0,0,0,0,0},
{0,0,0,0,0,8,206,206,206,206,206,0,0,0,0,0},
{0,0,0,0,0,0,8,206,206,206,206,206,0,0,0,0},
{0,0,0,0,0,0,0,8,206,206,206,206,206,0,0,0},
{0,0,0,0,0,0,0,0,8,206,206,206,206,206,0,0},
{0,0,0,0,0,0,0,0,0,8,206,206,206,206,206,0}
},
{
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
}



  //FINAL DEL TEXTO COPIADO
};
  
  return NEWmatrizRGB[RGB][i][j];
  
}